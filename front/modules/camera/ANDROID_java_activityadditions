/* -*-java-*- */
private String camera_tmp;
private String camera_fnl;

private String vid_tmp;
private String vid_fnl;

static final int REQUEST_IMAGE_CAPTURE = 76781;
static final int REQUEST_VIDEO_CAPTURE = 76782;

private String faceBackCameraID = null;

public void initBackCameraId(Context context) {
    CameraManager mCameraManager = (CameraManager) context.getSystemService(Context.CAMERA_SERVICE);
    try {
        for(final String cameraId : mCameraManager.getCameraIdList()){
            CameraCharacteristics characteristics = mCameraManager.getCameraCharacteristics(cameraId);
            int cOrientation = characteristics.get(CameraCharacteristics.LENS_FACING);
            if(cOrientation == CameraCharacteristics.LENS_FACING_BACK){
                faceBackCameraID = cameraId;
            }
        }
    } catch (CameraAccessException e) {
        e.printStackTrace(System.err);
        // Toast.makeText(context, e.getMessage(), Toast.LENGTH_SHORT).show();
    }
}

private Uri compatGetUriForFile(File f) {
  boolean x = false;
  boolean y = true;
  Uri result = null;
  if( !x && y ) result = Uri.fromFile(f);
  return result;
}

private void startCamera(String fnl_name, String tmp_name) {
  camera_fnl = fnl_name;
  camera_tmp = tmp_name;
  if(faceBackCameraID == null) initBackCameraId(getApplicationContext());
  if(faceBackCameraID == null) {
    ln_log("could not find camera");
    return;
  }
  if(!checkOrRequestPermission(android.Manifest.permission.CAMERA)) {
    ln_log("User failed to grant CAMERA permission");
    return;
  }
  else {
      android.view.View oldView = getCurrentView();
      Camera2BasicFragment CameraFragment = null;
      try {
  setContentView(R.layout.fragment_camera2_basic);
  CameraFragment = new Camera2BasicFragment();
  /* should go into onCreate -- IF NEEDED AT ALL
  if (null == savedInstanceState) {
      getSupportFragmentManager().beginTransaction()
          .replace(R.id.container, Camera2BasicFragment.newInstance())
          .commit();
  }
  */

    } catch (Exception e){
          e.printStackTrace(System.err);
    }
    setCurrentView(oldView);
  }
}

private void startVidCamera(String fnl_name, String tmp_name, int maxlength) {
  vid_fnl = fnl_name;
  vid_tmp = tmp_name;
  if(checkOrRequestPermission(android.Manifest.permission.CAMERA)) {
      Intent intent = new Intent(MediaStore.ACTION_VIDEO_CAPTURE);
      File f = new File(vid_tmp);
      if (f != null) {
          intent.putExtra(MediaStore.EXTRA_OUTPUT, Uri.fromFile(f));
          intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION|Intent.FLAG_GRANT_WRITE_URI_PERMISSION);
          if (maxlength > 0) {
              intent.putExtra(MediaStore.EXTRA_DURATION_LIMIT, maxlength);
          }
          startActivityForResult(intent, REQUEST_VIDEO_CAPTURE);
      }
  }
}
