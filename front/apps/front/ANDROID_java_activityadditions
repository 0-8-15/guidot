/* -*-java-*- */
java.text.SimpleDateFormat ln_log_date_formatter = new java.text.SimpleDateFormat("yyyy-MM-dd HH:mm:ss ");

String TAG = "front";

public void ln_log(String msg) {
    String m = ln_log_date_formatter.format(new java.util.Date()) + msg;
    System.err.println(TAG + ": " + m);
    Log.d(TAG, m);
}

private static Object jscheme_this = null;
public static @SYS_PACKAGE_DOT@.@SYS_APPNAME@ me() {return (@SYS_PACKAGE_DOT@.@SYS_APPNAME@) jscheme_this;}

private static jscheme.Scheme jschemeSession = new jscheme.Scheme(new String[0]);

public Object jschemeCallBasic(Object expr) {
    if(jschemeSession != null) {
        synchronized(jschemeSession) {
            jscheme_this = this;
            return jschemeSession.eval(expr);
        }
    } else return null;
}

public String jschemeCall(String msg) {
    try {
        jscheme.InputPort in = new jscheme.InputPort(new java.io.ByteArrayInputStream(msg.getBytes(java.nio.charset.Charset.forName("UTF-8"))));
        Object expr = in.read();
        if(in.isEOF(expr)) return "E\n\"invalid input\"";
        Object result = jschemeCallBasic(expr);
        java.io.StringWriter buf = new java.io.StringWriter();
        java.io.PrintWriter port = new java.io.PrintWriter(buf);
        port.println("D");
        jscheme.SchemeUtils.write(result, port, true);
        return buf.toString();
    } catch (Exception e) {
        java.io.StringWriter buf = new java.io.StringWriter();
        java.io.PrintWriter port = new java.io.PrintWriter(buf);
        port.println("E");
        jscheme.SchemeUtils.write(("" + e).toCharArray(), port, true);
        return buf.toString();
    }
}
